/* To automatically rename your SAS variables to replace spaces with underscores */
options validvarname=V7;


PROC IMPORT DATAFILE= 'H:\Project\ads demo3.csv' OUT=DEMOGRAPHICS DBMS=CSV;
RUN;

DATA PANELSCANNER;
INFILE "H:\Project\toothbr_PANEL_GR_1114_1165.dat" FIRSTOBS =2 dlm="09"x;
INPUT PANID WEEK UNITS OUTLET $ DOLLARS IRI_KEY COLUPC;
RUN;

DATA STOREINFO;
INFILE "h:\Project\Delivery_Stores" FIRSTOBS =2;
INPUT IRI_KEY 1-8 OU $ 9-10  EST_ACV 12-19 Market_Name $ 21-44  Open 46-49 Clsd 51-54 MskdName $  56-63  ;
RUN;

DATA SCANNERGROC;
INFILE "h:\Project\toothbr_groc_1114_1165" FIRSTOBS =2;
INPUT IRI_KEY 1-7 WEEK 9-12 SY 14-15 GE 17-18 VEND 20-24  ITEM 26-30  UNITS 32-36 DOLLARS 38-45 F $ 46-50 D 52 PR 54 ;
RUN;

PROC IMPORT DATAFILE= 'h:\Project\IRI_week_translation.xls' OUT=IRIWEEK DBMS=XLS;
RUN;

PROC IMPORT DATAFILE= 'h:\Project\prod_tooth.xls' OUT=work.Product DBMS=XLS;
RUN;

DATA SCANNERGROC1;
	SET SCANNERGROC(rename = (SY = SYnum GE = GEnum VEND = VENDnum ITEM = ITEMnum));
	FORMAT colupc 20.;
	colupc = SYnum*100000000000+GEnum*10000000000+VENDnum*100000+ITEMnum;
	SY = put(SYnum, 5.);
	GE = put(GEnum, 5.);
	VEND = put(VENDnum, 10.);
	ITEM = put(ITEMnum, 10.);
	DROP SYnum GEnum VENDnum ITEMnum;
RUN;

DATA Product1;
SET Product(rename = (SY = SYnum GE = GEnum VEND = VENDnum ITEM = ITEMnum));
FORMAT colupc 20.;
    colupc = SYnum*100000000000+GEnum*10000000000+VENDnum*100000+ITEMnum;
	SY = put(SYnum, 5.);
	GE = put(GEnum, 5.);
	VEND = put(VENDnum, 10.);
	ITEM = put(ITEMnum, 10.);
	DROP SYnum GEnum VENDnum ITEMnum;
RUN;

PROC SORT DATA = SCANNERGROC1;
	BY colupc;
RUN;

PROC SORT DATA = Product1;
	BY colupc;
RUN;

DATA MASTER;
MERGE SCANNERGROC1 ( IN= In1) Product1;
BY colupc;
IF In1=1 then output MASTER;
RUN;

proc print data= MASTER (Obs=10);run;

PROC SQL;
Select Count (*) AS Total, SHAPE FROM MASTER
Group By SHAPE
Order by Total desc;

DATA ALLPURPOSE;
SET MASTER;
WHERE TYPE_OF_BRUSH = "FLEXIBLE" AND SHAPE ='RUBBER GRIP';
RUN;


PROC FREQ DATA=ALLPURPOSE order = freq ;
tables IRI_KEY COLUPC L3 L5 SHAPE ;
run;

DATA ALLPURPOSE_NEW;
SET ALLPURPOSE;
UNITS_OZ = UNITS*16*VOL_EQ;
PRICE_PER_OZ = DOLLARS/UNITS_OZ;
MS_DOLLARS = PRICE_PER_OZ * UNITS_OZ;
RUN;


/* Descriptive statistics for top performing brands */
PROC SUMMARY DATA = ALLPURPOSE_NEW nway;
	CLASS L3 L5;
	VAR UNITS_OZ ;
	OUTPUT OUT = TOP_Performing_Brands(drop = _TYPE_ _FREQ_)  SUM = UNITS_OZ;
RUN;

PROC SORT DATA= TOP_Performing_Brands ;
by descending UNITS_OZ;
RUN;

*Market Share weight calculation for Clorox and PineSol;

PROC SUMMARY DATA = ALLPURPOSE_NEW NWAY;
CLASS IRI_KEY WEEK L5;
VAR UNITS_OZ;
OUTPUT OUT = UNITS_BRAND SUM = UNITS_OZ;
RUN;

PROC SUMMARY DATA = ALLPURPOSE_NEW NWAY;
CLASS IRI_KEY WEEK;
VAR UNITS_OZ;
OUTPUT OUT = UNITS_ALL(RENAME=(UNITS_OZ = SUM_OF_UNITS_OZ)) SUM = UNITS_OZ;
RUN;

PROC SORT DATA = UNITS_BRAND;
BY IRI_KEY WEEK;
RUN;

PROC SORT DATA = UNITS_ALL;
BY  IRI_KEY WEEK;
RUN;

DATA WEIGHTS_ALL;
MERGE UNITS_BRAND UNITS_ALL;
BY  IRI_KEY WEEK;
RUN;

DATA WEIGHTS_ALL;
SET WEIGHTS_ALL;
MS_WT = UNITS_OZ/SUM_OF_UNITS_OZ;
RUN;

DATA WEIGHTS_ALL_CLOROX;
SET WEIGHTS_ALL;
WHERE L5 = "COLGATE NAVIGATOR";
RUN;

DATA WEIGHTS_ALL_PINESOL;
SET WEIGHTS_ALL;
WHERE L5 = "AQUAFRESH FLEX DIRECT";
RUN;

/*   Weight calculation for Clorox  */
DATA ALLPURPOSE_CLOROX;
SET ALLPURPOSE_NEW;
WHERE L5 = 'COLGATE NAVIGATOR';
RUN;

PROC SUMMARY DATA = ALLPURPOSE_CLOROX NWAY;
CLASS IRI_KEY WEEK colupc;
VAR UNITS_OZ;
OUTPUT OUT = UNITS_CLOROX SUM = UNITS_OZ;
RUN;

PROC SUMMARY DATA = ALLPURPOSE_CLOROX NWAY;
CLASS IRI_KEY WEEK;
VAR UNITS_OZ;
OUTPUT OUT = UNITS1_CLOROX(RENAME=(UNITS_OZ = SUM_OF_UNITS_OZ)) SUM = UNITS_OZ;
RUN;

PROC SORT DATA = UNITS_CLOROX;
BY IRI_KEY WEEK;
RUN;

PROC SORT DATA = UNITS1_CLOROX;
BY  IRI_KEY  WEEK;
RUN;

DATA WEIGHTS_CLOROX;
MERGE UNITS_CLOROX UNITS1_CLOROX;
BY  IRI_KEY WEEK;
RUN;

DATA WEIGHTS_CLOROX;
SET WEIGHTS_CLOROX;
SHARED_WT = UNITS_OZ/SUM_OF_UNITS_OZ;
RUN;

PROC SORT DATA = WEIGHTS_CLOROX;
BY IRI_KEY week colupc;
RUN;

PROC SORT DATA = ALLPURPOSE_CLOROX;
BY IRI_KEY week colupc;
RUN;

DATA CLOROX_SCANNER;
MERGE WEIGHTS_CLOROX  ALLPURPOSE_CLOROX;
BY IRI_KEY week colupc;
RUN;

PROC SORT DATA = CLOROX_SCANNER;
BY IRI_KEY WEEK COLUPC ;
RUN;


DATA CLOROX_SCANNER;
SET CLOROX_SCANNER;
if F='A+' then F_APLUS=1;else F_APLUS=0;
if F='A' then F_A=1;else F_A=0;
if F='B' then F_B=1;else F_B=0;
if F='C' then F_C=1;else F_C=0;
if D=1 then D_MINOR=1;else D_MINOR=0;
if D=2 then D_MAJOR=1;else D_MAJOR=0;
F_APLUS_WT = SHARED_WT*F_APLUS;
F_A_WT = SHARED_WT*F_A;
F_B_WT = SHARED_WT*F_B;
F_C_WT = SHARED_WT *F_C;
D_MINOR_WT = SHARED_WT * D_MINOR;
D_MAJOR_WT = SHARED_WT * D_MAJOR;
PR_WT = SHARED_WT * PR;
PRICE_PER_OZ_WT = PRICE_PER_OZ * SHARED_WT;
RUN;

PROC SUMMARY DATA = CLOROX_SCANNER NWAY;
CLASS IRI_KEY WEEK;
VAR UNITS_OZ PRICE_PER_OZ_WT D_MINOR_WT D_MAJOR_WT F_APLUS_WT F_A_WT F_B_WT F_C_WT PR_WT;
OUTPUT OUT = CLOROX_SCANNER01 SUM = UNITS_OZ PRICE_PER_OZ_WT D_MINOR_WT D_MAJOR_WT F_APLUS_WT F_A_WT F_B_WT F_C_WT PR_WT;
RUN;

DATA CLOROX_SCANNER02;
MERGE WEIGHTS_ALL_CLOROX CLOROX_SCANNER01;
BY IRI_KEY WEEK;
RUN;

DATA CLOROX_SCANNER03;
SET CLOROX_SCANNER02;
UNITS_OZ_MS = UNITS_OZ * MS_WT;
RUN;

DATA CLOROX_SCANNER03;
SET CLOROX_SCANNER03;
UNITS_OZ_MS_LOG = LOG(UNITS_OZ_MS);
PRICE_PER_OZ_WT_LOG = LOG(PRICE_PER_OZ_WT);
RUN;

PROC SORT DATA = CLOROX_SCANNER03;
BY IRI_KEY WEEK ;
RUN;

*Regression for Pine SOL;

DATA ALLPURPOSE_PINESOL;
SET ALLPURPOSE_NEW;
WHERE L5 = 'AQUAFRESH FLEX DIRECT';
RUN;

PROC SUMMARY DATA = ALLPURPOSE_PINESOL NWAY;
CLASS IRI_KEY WEEK colupc;
VAR UNITS_OZ;
OUTPUT OUT = UNITS_PINESOL SUM = UNITS_OZ;
RUN;

PROC SUMMARY DATA = ALLPURPOSE_PINESOL NWAY;
CLASS IRI_KEY WEEK;
VAR UNITS_OZ;
OUTPUT OUT = UNITS1_PINESOL(RENAME=(UNITS_OZ = SUM_OF_UNITS_OZ)) SUM = UNITS_OZ;
RUN;

PROC SORT DATA = UNITS_PINESOL;
BY IRI_KEY WEEK;
RUN;

PROC SORT DATA = UNITS1_PINESOL;
BY  IRI_KEY  WEEK;
RUN;

DATA WEIGHTS_PINESOL;
MERGE UNITS_PINESOL UNITS1_PINESOL;
BY  IRI_KEY WEEK;
RUN;

DATA WEIGHTS_PINESOL;
SET WEIGHTS_PINESOL;
SHARED_WT = UNITS_OZ/SUM_OF_UNITS_OZ;
RUN;

PROC SORT DATA = WEIGHTS_PINESOL;
BY IRI_KEY week colupc;
RUN;

PROC SORT DATA = ALLPURPOSE_PINESOL;
BY IRI_KEY week colupc;
RUN;

DATA PINESOL_SCANNER;
MERGE WEIGHTS_PINESOL  ALLPURPOSE_PINESOL;
BY IRI_KEY week colupc;
RUN;

PROC SORT DATA = PINESOL_SCANNER;
BY IRI_KEY WEEK COLUPC ;
RUN;


DATA PINESOL_SCANNER;
SET PINESOL_SCANNER;
if F='A+' then F_APLUS=1;else F_APLUS=0;
if F='A' then F_A=1;else F_A=0;
if F='B' then F_B=1;else F_B=0;
if F='C' then F_C=1;else F_C=0;
if D=1 then D_MINOR=1;else D_MINOR=0;
if D=2 then D_MAJOR=1;else D_MAJOR=0;
F_APLUS_WT = SHARED_WT*F_APLUS;
F_A_WT = SHARED_WT*F_A;
F_B_WT = SHARED_WT*F_B;
F_C_WT = SHARED_WT *F_C;
D_MINOR_WT = SHARED_WT * D_MINOR;
D_MAJOR_WT = SHARED_WT * D_MAJOR;
PR_WT = SHARED_WT * PR;
PRICE_PER_OZ_WT = PRICE_PER_OZ * SHARED_WT;
RUN;

PROC SUMMARY DATA = PINESOL_SCANNER NWAY;
CLASS IRI_KEY WEEK;
VAR UNITS_OZ PRICE_PER_OZ_WT D_MINOR_WT D_MAJOR_WT F_APLUS_WT F_A_WT F_B_WT F_C_WT PR_WT;
OUTPUT OUT = PINESOL_SCANNER01 SUM = UNITS_OZ PRICE_PER_OZ_WT D_MINOR_WT D_MAJOR_WT F_APLUS_WT F_A_WT F_B_WT F_C_WT PR_WT;
RUN;

DATA PINESOL_SCANNER02;
MERGE WEIGHTS_ALL_PINESOL PINESOL_SCANNER01;
BY IRI_KEY WEEK;
RUN;

DATA PINESOL_SCANNER03;
SET PINESOL_SCANNER02;
UNITS_OZ_MS = UNITS_OZ * MS_WT;
RUN;

DATA PINESOL_SCANNER03;
SET PINESOL_SCANNER03;
UNITS_OZ_MS_LOG = LOG(UNITS_OZ_MS);
PRICE_PER_OZ_WT_LOG = LOG(PRICE_PER_OZ_WT);
RUN;

PROC SORT DATA = PINESOL_SCANNER03;
BY IRI_KEY WEEK ;
RUN;

/*Proc Panel */

PROC PANEL DATA = PINESOL_SCANNER03;
id IRI_KEY week ;
MODEL UNITS_OZ_MS_LOG = PRICE_PER_OZ_WT_LOG D_MINOR_WT D_MAJOR_WT F_APLUS_WT F_A_WT F_B_WT F_C_WT PR_WT/ fixone;
run;

DATA PINESOL_SCANNER_CROSS(rename = (PRICE_PER_OZ_WT_LOG=PRICE_PER_OZ_WT_LOG_PINESOL 
								UNITS_OZ_MS_LOG = UNITS_OZ_MS_LOG_PINESOL
								D_MINOR_WT = D_MINOR_WT_PINESOL  
								D_MAJOR_WT = D_MAJOR_WT_PINESOL  
								F_APLUS_WT = F_APLUS_WT_PINESOL 
								F_A_WT = F_A_WT_PINESOL
								F_B_WT = F_B_WT_PINESOL
								F_C_WT = F_C_WT_PINESOL
								PR_WT = PR_WT_PINESOL));
SET PINESOL_SCANNER03;
DROP L5 _TYPE_ _FREQ_ UNITS_OZ SUM_OF_UNITS_OZ MS_WT UNITS_OZ_MS PRICE_PER_OZ_WT;
RUN;

DATA CLOROX_SCANNER_CROSS;
SET CLOROX_SCANNER03;
DROP L5 _TYPE_ _FREQ_ UNITS_OZ SUM_OF_UNITS_OZ MS_WT UNITS_OZ_MS PRICE_PER_OZ_WT;
run;

DATA CROSSPRICE;
MERGE CLOROX_SCANNER_CROSS (IN=In1) PINESOL_SCANNER_CROSS (IN=In2);
BY IRI_KEY WEEK;
IF In1 = 1 and In2 = 1 then OUTPUT CROSSPRICE;
run;

*Cross Price Elasticity for PINESOL market share;
PROC PANEL DATA = CROSSPRICE;
ID IRI_KEY WEEK;
MODEL UNITS_OZ_MS_LOG_PINESOL = PRICE_PER_OZ_WT_LOG D_MINOR_WT D_MAJOR_WT F_APLUS_WT F_A_WT F_B_WT F_C_WT PR_WT PRICE_PER_OZ_WT_LOG_PINESOL D_MINOR_WT_PINESOL D_MAJOR_WT_PINESOL
						F_APLUS_WT_PINESOL F_A_WT_PINESOL F_B_WT_PINESOL F_C_WT_PINESOL PR_WT_PINESOL / fixone;
run;

PROC PANEL DATA = CROSSPRICE;
ID IRI_KEY WEEK;
MODEL UNITS_OZ_MS_LOG_PINESOL = PRICE_PER_OZ_WT_LOG F_APLUS_WT PRICE_PER_OZ_WT_LOG_PINESOL D_MINOR_WT_PINESOL D_MAJOR_WT_PINESOL 
							F_APLUS_WT_PINESOL F_A_WT_PINESOL F_B_WT_PINESOL F_C_WT_PINESOL / fixone;
run;

/* RFM ANALYSIS */
DATA PANELSCANNER_BRANDS;
MERGE PANELSCANNER (IN=In1) ALLPURPOSE_NEW;
BY COLUPC;
IF In1 = 1 then OUTPUT PANELSCANNER_BRANDS;
run;

DATA PANELSCANNER_BRANDS;
SET PANELSCANNER_BRANDS;
IF cmiss(of _all_) then delete;
run;

PROC SORT DATA = PANELSCANNER_BRANDS;
BY PANID;
RUN;

DATA DEMOGRAPHICS;
SET DEMOGRAPHICS (rename=(Panelist_ID=PANID));
RUN;

PROC SORT DATA = DEMOGRAPHICS;
BY PANID;
RUN;


/* Data for RFM model*/
PROC SQL;
CREATE TABLE Panel_RFM_data
AS
(
SELECT PANID, MAX(WEEK) AS Rec_pur, COUNT(WEEK) AS Freq_pur, SUM(DOLLARS) AS Mon_value
FROM PANELSCANNER_BRANDS
GROUP BY PANID
);
quit;

/*Sorting data based on Recency*/
proc sort data= Panel_RFM_data out=Panel_RFM_Rpref;
by DESCENDING Rec_pur;
run;

/*Ranking Recency of all panels*/
PROC RANK DATA=Panel_RFM_Rpref out=Panel_RFM_Rrank ties=low groups=5;
var Rec_pur;
ranks R;
run;

/*Ranking Frequency of all panels*/
PROC RANK DATA=Panel_RFM_Rrank out=Panel_RFM_Frank ties=low groups=5;
var Freq_pur;
ranks F;
run;

/*Ranking Monetray value of all panels*/
PROC RANK DATA=Panel_RFM_Frank out=Panel_RFM_Mrank ties=low groups=5;
var Mon_value;
ranks M;
run;

/*Ranking Overall  panels*/
DATA Panel_RFM_Ovrank;
SET Panel_RFM_Mrank;
R+1;
F+1;
M+1;
RFMScore=CATS(of R F M)+0;
run;



/* CLustering the panels based on R F M values*/
PROC CLUSTER DATA=Panel_RFM_Ovrank METHOD=com ccc pseudo OUTTREE=RFM_Clus_Tree;
VAR R F M;
ID PANID;
RUN;

Proc Print data = Panel_RFM_Ovrank; run;

/* Finalizing 5 clusters*/
/* Cluster number from 1-5 and names from CL5-CL9 */
PROC TREE DATA=RFM_Clus_Tree OUT=RFM_clus_res NCLUSTERS=5;
ID PANID;
COPY R F M;
RUN;

/* Merging Clusters data with the panel demographics*/
PROC SORT DATA=RFM_clus_res; 
BY PANID;

PROC SORT DATA= DEMOGRAPHICS; 
by PANID;

DATA RFM_clus_demo;
MERGE RFM_clus_res (in=in1) DEMOGRAPHICS; 
IF in1 = 1 THEN OUTPUT RFM_clus_demo; 
BY PANID;
RUN;

PROC SQL;
CREATE TABLE Panel_RFM_CLUSTER
AS
(
select distinct D.PANID,D.Combined_Pre_Tax_Income_of_HH,D.Family_Size,D.HH_AGE,(D.Number_of_Dogs + D.Number_of_Cats) AS Pets,D.Children_Group_Code,D.ZIPCODE,R.Cluster
FROM Work.Demographics D
INNER JOIN RFM_clus_demo R on D.PANID=R.PANID
GROUP BY R.Cluster, D.PANID
);
quit;

Proc Print data = Panel_RFM_CLUSTER; run; 

/* TOP 10 STORES BASED ON PINESOL */
proc sql outobs=10;
Create table clorox_market as select s.IRI_KEY, s.Market_Name, sum(c.UNITS_OZ) as total_Volume
from storeinfo s inner join clorox_scanner01 c on s.IRI_KEY = c.IRI_KEY
group by s.market_name, s.IRI_KEY
ORDER BY total_Volume DESC;

Proc Print data = clorox_market; run;

/* TOP 10 STORES BASED ON CLOROX CLEAN UP */
proc sql outobs=10;
Create table pinesol_market as 
select s.IRI_KEY, s.Market_Name, sum(c.UNITS_OZ) as total_volume 
from storeinfo s inner join pinesol_scanner01 c on s.IRI_KEY = c.IRI_KEY
group by s.market_name, s.IRI_KEY
ORDER BY total_volume DESC;

Proc Print data = pinesol_market; run;
